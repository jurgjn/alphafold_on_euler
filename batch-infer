#!/bin/bash -l
# Run batch inference on a set of sequences:
#     ./batch-infer METHOD RESULTS_ID [--dry-run]
#
# For colabfold, run colabfold on a collection of sequences; sequences specified in .csv at:
#     results/$1/colabfold_input.csv
#
# .csv format described in: https://github.com/sokrypton/ColabFold/issues/83
#
# Examples:
#   ./batch-infer colabfold results/example_multimere | sbatch
#   ./batch-infer colabfold results/missing_pairs --dry-run | sbatch
#   ./batch-infer colabfold results/interactions_allProteomics --dry-run | sbatch
#   ./batch-infer colabfold results/interactions_allProteomics | sbatch
#
LOGS_DATE=$2/.snakemake-eu/logs/`date +"%y-%m-%d"`
RESULTS_PREFIX_ENC=`echo -n $2 | sed -e 's#/#-#g'`
JOBNAME="batch-infer:$1=$RESULTS_PREFIX_ENC"
PROFILE=`pwd`/software/smk-simple-slurm-eu
cat - <<EOF
#!/usr/bin/env bash
#SBATCH --job-name=$JOBNAME
#SBATCH --ntasks=1
#SBATCH --mem-per-cpu=16G
#SBATCH --tmp=16834
#SBATCH --time=7-00:00:00
#SBATCH --output=$LOGS_DATE/$JOBNAME-%j.txt
module load stack/2024-06 python/3.11.6 eth_proxy
if [ ! -f software/venvs/batch-infer-venv/bin/activate ]; then
    software/smk-simple-slurm-eu/venv-create.sh software/venvs/batch-infer-venv
fi
source software/venvs/batch-infer-venv/bin/activate
if [ $1 == "colabfold" ]; then
    snakemake $1_all --profile=$PROFILE --directory $2 --configfile $2/config.yml --rerun-triggers input $3
else
    snakemake $1 --snakefile workflow/targets/$1.smk \\
        --configfile workflow/config/defaults.yaml $2/config.yaml \\
        --profile=$PROFILE --workflow-profile=workflow/profiles/default \\
        --directory $2 --rerun-triggers input $3
fi
myjobs -j \$SLURM_JOB_ID
EOF
